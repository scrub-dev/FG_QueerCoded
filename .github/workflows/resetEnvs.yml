name: Update Environment Variables
on:
  workflow_dispatch:
jobs:
  remove_existing:
    runs-on: self-hosted
    steps:
      - name: Check file existence
        id: check_env_exists
        uses: andstor/file-existence-action@v1
        with:
          files: ".env"
      - name: Remove .env if file already exists
        if: steps.check_env_exists.outputs.file_exists == 'true'
        run: |
          rm .env 2>/dev/null
  create_new:
    runs-on: self-hosted
    steps:
      - name: Create .env file
        run: touch .env
  populate:
    runs-on: self-hosted
    steps:
      - name: populate environment file
      run: |
          echo FEED_HANDLE="${{secrets.FEED_HANDLE}}" >> .env
          echo FEED_PASSWD="${{secrets.FEED_PASSWD}}" >> .env
          echo FEED_RECORD_NAME="${{secrets.FEED_RECORD_NAME}}" >> .env
          echo FEED_DISPLAY_NAME="${{secrets.FEED_DISPLAY_NAME}}" >> .env
          echo FEED_DESCRIPTION="${{secrets.FEED_DESCRIPTION}}" >> .env
          echo FEED_AVATAR_PATH="${{secrets.FEED_AVATAR_PATH}}" >> .env
          echo FEEDGEN_PORT=${{secrets.FEEDGEN_PORT}} >> .env
          echo FEEDGEN_LISTENHOST="${{secrets.FEEDGEN_LISTENHOST}}" >> .env
          echo FEEDGEN_SQLITE_LOCATION="${{secrets.FEEDGEN_SQLITE_LOCATION}}" >> .env
          echo FEEDGEN_SUBSCRIPTION_ENDPOINT="${{secrets.FEEDGEN_SUBSCRIPTION_ENDPOINT}}" >> .env
          echo FEEDGEN_HOSTNAME="${{secrets.FEEDGEN_HOSTNAME}}" >> .env
          echo FEEDGEN_PUBLISHER_DID="${{secrets.FEEDGEN_PUBLISHER_DID}}" >> .env
          echo FEEDGEN_SUBSCRIPTION_RECONNECT_DELAY="${{secrets.FEEDGEN_SUBSCRIPTION_RECONNECT_DELAY}}" >> .env